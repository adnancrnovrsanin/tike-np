// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// -----------------------------------------
// MODEL ZA DODATNE (RL) PODATKE O KORISNIKU
// -----------------------------------------
model UserProfile {
  id             Int    @id @default(autoincrement())
  supabaseUserId String @unique

  // RL polja
  age              Int?
  averageSpent     Float?
  priceSensitivity Float?

  // Ako i dalje želiš da pratiš "koji proizvod trenutno gleda"
  productId Int?
  product   Product? @relation(fields: [productId], references: [id])

  // Korpa (korisnik => više stavki)
  cartItems CartItem[]

  // Lista omiljenih (korisnik => više fav proizvoda)
  favorites Favorite[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// -----------------------------------------
// KATEGORIJE
// -----------------------------------------
model Category {
  id          Int     @id @default(autoincrement())
  category_id Int
  name        String?

  products Product[]
}

// -----------------------------------------
// PROIZVODI
// -----------------------------------------
model Product {
  id          Int     @id @default(autoincrement())
  product_id  Int
  name        String?
  brand       String?
  description String?
  basePrice   Float
  margin      Float
  imageUrl    String?
  isActive    Boolean @default(true)
  totalStock  Int     @default(0)

  // Novi atributi
  gender Gender?
  color  String?

  categoryId Int?
  category   Category? @relation(fields: [categoryId], references: [id])

  variants    ProductVariant[]
  UserProfile UserProfile[]
  Favorite    Favorite[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([product_id])
  @@index([categoryId])
}

// Možemo dodati i enume za bolje tipiziranje
enum Gender {
  men
  women
  unisex
}

enum ClothingSize {
  XS
  S
  M
  L
  XL
  XXL
}

enum ShoeSize {
  EU_35
  EU_36
  EU_37
  EU_38
  EU_39
  EU_40
  EU_41
  EU_42
  EU_43
  EU_44
  EU_45
}

model ProductVariant {
  id           Int           @id @default(autoincrement())
  clothingSize ClothingSize? // za odeću
  shoeSize     ShoeSize? // za obuću
  quantity     Int

  productId Int
  product   Product @relation(fields: [productId], references: [id])

  cartItems CartItem[]
}

// -----------------------------------------
// FAVORITES: UserProfile ↔ Product
// -----------------------------------------
model Favorite {
  id Int @id @default(autoincrement())

  userProfileId Int
  userProfile   UserProfile @relation(fields: [userProfileId], references: [id])

  productId Int
  product   Product @relation(fields: [productId], references: [id])

  createdAt DateTime @default(now())
}

// -----------------------------------------
// CART (BASKET): UserProfile ↔ ProductVariant
// -----------------------------------------
model CartItem {
  id Int @id @default(autoincrement())

  userProfileId Int
  userProfile   UserProfile @relation(fields: [userProfileId], references: [id])

  // Koju varijantu proizvoda je dodao
  productVariantId Int
  productVariant   ProductVariant @relation(fields: [productVariantId], references: [id])

  // Koliko komada (default 1)
  quantity Int @default(1)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([userProfileId])
  @@index([productVariantId])
}
